import pygame as pg, random,time
from efects import Sounds
from objects import Aircraft, Asteroid, Asteroid2, Asteroid3,life
from screens import Game_screen, Gameover, Intro

pg.mixer.init()
pg.init()

game_over = False

intro = Intro()
intro.intro_screen1()

sound = Sounds() 

swordfish = Aircraft()
asteroide = Asteroid()
swordfish_life = life()
asteroid=Asteroid() 
asteroid2 = Asteroid2()
asteroid3 = Asteroid3()
gameover =Gameover()


screen = pg.display.set_mode((1000,600))
pg.display.set_caption("The Quest")

#images
background_image  = pg.image.load("images\planets\ilios.png").convert() #1.20 finalizar pantalla
stage2 = pg.image.load("images\planets\smallpurple.png").convert()
background_x = 0
background_y =0
final_mision1 = -1150.8999999999116
final_mision2 = -1155.8999999999116
icon = pg.image.load("images\icon.PNG")
###

life_6 =  pg.image.load("images/aircraft/6_vidas.png").convert()
life_5 =  pg.image.load("images/aircraft/5_vidas.png").convert()
life_4 =  pg.image.load("images/aircraft/4_vidas.png").convert()#
life_3 =  pg.image.load("images/aircraft/3_vidas.png").convert()
life_2 =  pg.image.load("images/aircraft/2_vidas.png").convert()
life_1 =  pg.image.load("images/aircraft/1_vida.png").convert()
nave_imbencible = pg.image.load("images/aircraft/nave.png")
jet = pg.image.load("images/jet.jpg")

pg.display.set_icon(icon)

pg.mixer.init()
pg.init()

game_screen =Game_screen() 

time_clock = pg.time.Clock()

fuente = pg.font.Font(None, 60)#
fuente_comunica = pg.font.Font(None, 30) #
fuente_stage = pg.font.Font(None, 30)

text_stage1 = "mision: planeta Épsilon"
text = "Game Over"

mensaje = fuente.render(text, 1, (255, 255, 255))
mensaje_stage1 = fuente_stage.render(text_stage1, 1,(255,255,255))

##########sprites###############

sprite_swordfish = pg.sprite.Group()
sprite_swordfish.add(swordfish)

asteroids_sprites= pg.sprite.Group()
asteroids_sprites.add(asteroid,asteroid2,asteroid3)

swordfish_life_sprites =pg.sprite.Group()
swordfish_life_sprites.add(swordfish_life)

life_restart = 150 ###
puntuacion= 0

score = 0 
scorelife = 0
imbencible = 150 
turbo = 0
lifes = 3   ###
final_mision1crono = 0
final_mision2crono = 0
landing = 0 ###
lifeup = 0


      
#######################################################################################################
sound.play_music1() 
while not game_over:      
    pg.init() 
    colisiones = pg.sprite.groupcollide(sprite_swordfish,asteroids_sprites,False,False)         
    asteroid_score = asteroid.asteroid_score + asteroid2.asteroid_score +asteroid3.asteroid_score
    if background_x > -1150.8999999999116: 
        puntuacion = fuente.render("Score: "+str(score+ asteroid_score + landing+ scorelife ), True,(255, 255, 0))
        screen.blit(puntuacion,(10,10))

    if colisiones and imbencible >= 150 and background_x > -1150.8999999999116:
        swordfish.image = pg.image.load("images/aircraft/explosion.png")
        sound.play_explosion()
        score -= 50
        lifes -= 1 
        sound.play_ouch()
        imbencible = 0   
        if  imbencible < 150:       
            swordfish.image = pg.image.load("images/aircraft/nave imbencible.png") 
            imbencible += 1
    else:      
      imbencible += 1
      swordfish.image = pg.image.load("images/aircraft/nave.png")
      lifeup  +=1 
       
    vida_up = pg.sprite.groupcollide(sprite_swordfish,swordfish_life_sprites,False,True)
    if vida_up and imbencible >= 150 and background_x > -1150.8999999999116 and lifeup>= 150:
        lifes += 1
        lifeup = 0
        scorelife += 60
        sound.play_explesion()
    if lifeup >= 600:
           swordfish_life_sprites.add(swordfish_life)

    dt = time_clock.tick(50)
    screen.blit(background_image,(background_x,background_y)) 
    if background_x > -1150.8999999999116:
       asteroid.asteroid_movement()
       asteroid2.asteroid2_movement()
       asteroid3.asteroid3_movement()
    else:
       asteroid.asteroid_noscore()
       asteroid2.asteroid2_noscore()
       asteroid3.asteroid3_noscore()        

    swordfish_life.life_movement()
    sprite_swordfish.update()
    screen.blit(puntuacion,(10,10))
    
    if lifes == 6:
        screen.blit(life_6,(500, 30))
    if lifes == 5:
        screen.blit(life_5,(500, 30))
    if lifes == 4:                                          #funcione de vida
        screen.blit(life_4,(500, 30))
    if lifes == 3:
        screen.blit(life_3,(500, 30))
    if lifes == 2:
        screen.blit(life_2,(500, 30))
    if lifes == 1:
        screen.blit(life_1,(500, 30))
    if lifes == 0:
            sound.switchoffplay1()
            game_over = True
            
        
           
    ######################buble de aterizaje ##########################################
     
    if background_x <= -1150.8999999999942:
       background_x =  -1150.8999999999942
       game_screen.landing_radio()
       if key[pg.K_SPACE]:
          final_mision1crono += 1  
          swordfish.aterrizaje()  
          landing += 1  
          if final_mision1crono >= 220 :
              sound.switchoffplay1()           
              sound.play_music2()  
              background_image  = pg.image.load("images\planets\movII.png").convert()
              background_x = 0
              swordfish.rect.center = 100,300             
              asteroid.asteroid_movement2()
              asteroid2.asteroid2_movement2()
              asteroid3.asteroid3_movement2()
              final_mision1crono = 0     
    #if landing == 440:    
        # game_over = True
                        ###################################################################33
    for event in pg.event.get():
        if event.type == pg.QUIT:
          game_over = True
          scoresscreen = True
    background_x -= 0.6  #0.6 optimo           
    key = pg.key.get_pressed()
    if not key[pg.K_UP]and not key[pg.K_DOWN]:
        turbo = 0
        swordfish.vy = 4
    if key[pg.K_UP]:
        turbo +=20
        swordfish.go_up()
        if turbo >= 500:
            swordfish.vy = 10
            swordfish.image = pg.image.load("images/aircraft/naveup_turbo.png")
        if  imbencible < 150:
            swordfish.image = pg.image.load("images/aircraft/nave_imbencibleup.png")         
    if key[pg.K_DOWN]:
        turbo +=20
        swordfish.go_down()
        if turbo >= 500:
            swordfish.vy = 10
            swordfish.image = pg.image.load("images/aircraft/navedown_turbo.png")
        if  imbencible < 150:
            swordfish.image = pg.image.load("images/aircraft/nave_imbencibledown.png")   
    swordfish_life_sprites.update
    swordfish_life_sprites.draw(screen)
    sprite_swordfish.update()
    sprite_swordfish.draw(screen)
    asteroids_sprites.update()
    asteroids_sprites.draw(screen)
    total_score = score+ asteroid_score + landing+ scorelife
    
    print(total_score)
    pg.time.get_ticks()
    pg.display.flip()


gameover.gameover_screen1()

















































































from asyncore import read
from cgitb import text
from dataclasses import field
from functools import total_ordering
import pygame as pg
from efects import Sounds
from objects import Aircraft, Asteroid, Asteroid2, Asteroid3,life
from screens import*
from main2 import game
from score import *


gameover = Gameover()
sound = Sounds() 
pg.mixer.init()
pg.init()
running = False
screens = Congratulations()
read_ordered("score")
player_comparison = read_Rows6("Score")  
#########################################################3
while not running:
    pg.init()
    key = pg.key.get_pressed() 
    intro = Intro()
    intro.intro_screen1()   ########## intro del juego######
    totalgamescore = game() ##########juego ##########
    pg.quit()
    ###############pantalla de escribir iniciales################
    if totalgamescore > int(player_comparison):
        pg.init()    
        screen_over = pg.display.set_mode((1000,600))
        background  = pg.image.load("images\endgame.jpg").convert()
        background_x =0
        background_y = 0
        font = pg.font.Font(None, 30)
        text_record = "N E W  R E C O R D"
        text_record_render = font.render(text_record, 1, (255, 255, 255))

        write_text = "Write your initials and press SPACE to continue"
        write_tocontinue = font.render(write_text, 1, (255, 255, 255))
        gameover = pg.mixer.Sound("Sounds\gameover.wav")
        gameover.set_volume(0.1)
        key = pg.key.get_pressed()
        playing = False
        score_text = "SCORE  " + str(totalgamescore)
        fontscore  =  pg.font.Font(None, 60)
        scorepint = fontscore.render(score_text,1,(255,255,0))
        name_font = pg.font.Font(None, 160)
        text_name = ""
        while not playing:
                pg.init()
                gameover.play()
                screen_over 
                background
                for event in pg.event.get():
                    key = pg.key.get_pressed()
                    if event.type == pg.QUIT or key[pg.K_SPACE]:
                        playing = True
                
                    if event.type == pg.KEYDOWN:
                        if event.key == pg.K_BACKSPACE:
                            text_name = text_name[:-1]
                        else:
                            text_name += event.unicode
                        if len(text_name) >3:
                            text_name = text_name[:-1] 
                        
                text_surface = name_font.render(text_name.upper(),1,(255,255,0))
                screen_over.blit(background,(0,0))
                screen_over.blit(write_tocontinue,(270,500))
                screen_over.blit(scorepint,(350,50))
                screen_over.blit(text_surface,(330,200))
                pg.display.update(text_record_render,(350,90))
        pg.quit()
        text_name = text_name.upper()
        print(text_name)
        if __name__ == "__main__":
            #¡#createDB()                          ####funciones de SQLITE########
            #createTable()
            #read_ordered("score")     
            inser_row(text_name,totalgamescore )


    if totalgamescore<= int(player_comparison):
        pg.init() 
        screen_over = pg.display.set_mode((1000,600))
        backgroundover  = pg.image.load("images/endgame.jpg").convert()
        background_x =0
        background_y = 0
        font = pg.font.Font(None, 30)
        write_textover = "press SPACE to continue"
        write_tocontinue = font.render(write_textover, 1, (255, 255, 255))
        gameover = pg.mixer.Sound("Sounds\gameover.wav")
        gameover.set_volume(0.1)
        key = pg.key.get_pressed()
        playing = False
        score_text = "SCORE  " + str(totalgamescore)
        fontscore  =  pg.font.Font(None, 60)
        scorepint = fontscore.render(score_text,1,(255,255,0))
        name_font = pg.font.Font(None, 160)
        text_name = ""
        while not playing:
                pg.init()
                gameover.play()
                screen_over 
                backgroundover
                for event in pg.event.get():
                    key = pg.key.get_pressed()
                    if event.type == pg.QUIT or key[pg.K_SPACE]:
                        playing = True
                screen_over.blit(backgroundover,(0,0))
                screen_over.blit(write_tocontinue,(320,500))
                screen_over.blit(scorepint,(350,50))
                pg.display.update()
        pg.quit()


    read_ordered("score")

    player1 = read_Rows("Score")
    player2 = read_Rows2("Score")
    player3 = read_Rows3("Score")
    player4 = read_Rows4("Score")
    player5 = read_Rows5("Score")     
    pg.init()    
    screen_over = pg.display.set_mode((1000,600))
    background  = pg.image.load("images\exosphere.jpg").convert()
    background_x =0
    background_y = 0
    font = pg.font.Font(None, 60)
    font_continue =pg.font.Font(None,30)
    textplayer1= (player1)
    textplayer2 =(player2)
    textplayer3= (player3)
    textplayer4 =(player4)
    textplayer5= (player5)
    continue_text = "press SPACE to continue or X to Windows"

    tocontinuegame = font_continue.render(continue_text, 1, (255, 255, 255))
    playerrender = font.render(player1, 1, (255, 255, 0))
    playe2render = font.render(player2, 1, (255, 255, 0))
    playe3render = font.render(player3, 1, (255, 255, 0))
    playe4render = font.render(player4, 1, (255, 255, 0))
    playe5render = font.render(player5, 1, (255, 255, 0))
    credits_music = pg.mixer.Sound("Sounds\gameover.wav")
    #gameover.set_volume(0.1)
    key = pg.key.get_pressed() 
    scores = False
                                                  ############pantalla de Records##################
    while not scores:
        sound.scores()
        pg.init()
        for event in pg.event.get():
             key = pg.key.get_pressed()
             if event.type == pg.QUIT or key[pg.K_SPACE]:
                scores = True 
             if key[pg.K_x]:
               exit() 
        screen_over.blit(background,(0,0))
        screen_over.blit(playerrender,(370,50))
        screen_over.blit(playe2render,(370,140))
        screen_over.blit(playe3render,(370,230))
        screen_over.blit(playe4render,(370,320))
        screen_over.blit(playe5render,(370,410))
        screen_over.blit(tocontinuegame,(280,500)) 
        pg.display.flip()
        pg.display.update()
    pg.quit()   
                                                          #####pantala de fin de juego######

    pg.init()
    screen_congrat = pygame.display.set_mode((1000,600))
    backgroundcongrat_x =0
    backgroundcongrat_y = 0
    font = pygame.font.Font(None, 30)
    misioxn_text = "MISSION  ACCOMPLISHED"
    tocontinue = font.render(continue_text,1, (255, 255, 255))
    key = pygame.key.get_pressed()
    credit = True
    backgroundcredits  = pygame.image.load("images/nigth_sky.jpg").convert()
    counter = 0
    credits_text1 = " CREDITS" 
    screen_credtis = pygame.display.set_mode((1000,600))
    text_box = pygame.Rect(10,10,40,120)
    x = 350
    y = 100
    continue_text = "press SPACE to continue or X to Windows"




    while credit:
        sound.credits()
        counter += 1
        for event in pygame.event.get():
            key = pygame.key.get_pressed()
            if event.type == pygame.QUIT or key[pygame.K_SPACE]:
               credit = False
            if key[pg.K_x]:
               exit()                       
        if counter == 2000:
            credits_text1 = "Producer   Ruben.Velasco"
        if counter == 4000:
            credits_text1 = "Designer  Ruben.Velasco"
        if counter == 6000:
            credits_text1 = "Audio Cowboy bebop soundtrack"
        if counter == 8000:
            credits_text1 = "2D artist Ruben.Velasco"
        if  counter == 10000:
            credits_text1 = "Contact Robingarvel@gmail.com"
        if counter == 12000:
            credits_text1 = "Thanks to Keepcoding Academy"
        if counter > 14000:
            counter = 0
        screen_credtis.blit(backgroundcredits,(-70,-200))
        credit_render = font.render(credits_text1,1, (255, 255, 255))
        screen_credtis.blit(credit_render,(x,y))
        screen_congrat.blit(tocontinuegame,(250,550))             
        pygame.display.flip()      
    pg.quit()